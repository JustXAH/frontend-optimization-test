import Head from "next/head";
import classnames from "classnames";
import * as React from "react";
import {flushSync} from "react-dom";

const CYCLES = 100_000_000;
const MAX_ITEMS_COUNT = 100;
let totalCalls = 0;

export default function Home() {
  const [rows, setRows] = React.useState<number[]>([]);
  const [isCalculating, setIsCalculating] = React.useState(false);

  React.useEffect(() => {
    if (MAX_ITEMS_COUNT >= rows.length) {
      const worker = new Worker(new URL('../src/worker.ts', import.meta.url))
      worker.addEventListener("message",  () => {
        flushSync(() => {
          setIsCalculating(false);
        })
      })
      const intervalId = setInterval(async () => {
        console.log("---- START");
        flushSync(() => {
          setIsCalculating(true);
        })

        worker.postMessage(CYCLES);

        setRows((_rows) => {
          if (_rows.length >= MAX_ITEMS_COUNT) {
            clearInterval(intervalId)
            worker.terminate();
            setIsCalculating(false);

            return _rows;
          }

          return [..._rows, _rows.length + 1];
        });

        totalCalls += 1;
        console.log(`---- END. Total calls: ${totalCalls}`);

        return
      }, 100);
    }
  }, []);

  return (
      <div>
        <Head>
          <title>Optimization Test</title>
          <meta name="description" content="Generated by create next app" />
          <link rel="icon" href="/favicon.ico" />
        </Head>

        <main className="p-20">
          <h1 className="text-center text-3xl">Optimization Test</h1>

          <p
              className="transition-all duration-150 cubic-bezier(0.5, 0.35, 0.15, 1) text-center"
              style={{
                // @TODO: blinking should work
                opacity: !isCalculating ? 0 : 100,
              }}
          >
            Calculating...
          </p>

          <ul className="flex flex-col items-center mt-20">
            {rows.map((item, idx) => (
                <li
                    key={idx}
                    className={classnames("relative text-[8px] animate", {
                      "animate-wiggle": idx % 2 === 0,
                      "animate-wiggle-reversed": idx % 2 === 1,
                    })}
                    style={{
                      animationDelay: `${idx * 10}ms`,
                      animationFillMode: "both",
                    }}
                >
                  {item}
                </li>
            ))}
          </ul>
        </main>
      </div>
  );
}
